version: "3"

networks:
  monitoring:
  application:
  logging:
    
services:
  php-fpm:
    build: ./
    image: bobbydvo/dummyapp_php-fpm:latest
    ports:
      - "9000:9000"
    networks:
      - application
    environment:
      - APPLICATION_ENV=prod
    deploy:
      mode: global
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: continue
        monitor: 60s
        max_failure_ratio: 0.3
  web:
    depends_on:
      - php-fpm
    image: bobbydvo/ukc_nginx:latest
    ports:
      - "80:80"
    networks:
      - application
    deploy:
      mode: global
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: continue
        monitor: 60s
        max_failure_ratio: 0.3
  elasticsearch:
    image: bobbydvo/ukc_elasticsearch:latest
    ports:
      - "9200:9200"
    networks:
      - logging
    deploy:
      mode: replicated
      replicas: 1
  kibana:
    image: bobbydvo/ukc_kibana:latest
    ports:
      - "5601:5601"
    networks:
      - logging
    deploy:
      mode: replicated
      replicas: 1
  
  
  logspout:
    image: bekt/logspout-logstash:latest
    networks:
      - logging
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock,readonly
    environment:
      ROUTE_URIS: logstash://logstash:5000
      DOCKER_LABELS: "true"
    deploy:
      mode: global
      resources:
        limits:
          cpus: '0.25'
          memory: 64M
        reservations:
          cpus: '0.25'
          memory: 32M

  logstash:
    image: basi/logstash:${LOGSTASH_VERSION:-v0.8.0}
    networks:
      - logging
    environment:
      DEBUG:                  "${LOGSTASH_DEBUG:-false}"
      LOGSPOUT:               ignore
      ELASTICSEARCH_USER:     ${ELASTICSEARCH_LOGS_USER}
      ELASTICSEARCH_PASSWORD: ${ELASTICSEARCH_LOGS_PASSWORD}
      ELASTICSEARCH_SSL:      ${ELASTICSEARCH_LOGS_SSL}
      ELASTICSEARCH_ADDR:     ${ELASTICSEARCH_LOGS_ADDR:-elasticsearch}
      ELASTICSEARCH_PORT:     ${ELASTICSEARCH_LOGS_PORT:-9200}
    deploy:
      mode: replicated
      replicas: 2
      resources:
        limits:
          cpus: '0.25'
          memory: 800M
        reservations:
          cpus: '0.25'
          memory: 400M

  cadvisor:
    image: google/cadvisor:${CADVISOR_VERSION:-v0.25.0}
    networks:
      - monitoring
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock,readonly
      - /:/rootfs
      - /var/run:/var/run
      - /sys:/sys
      - /var/lib/docker/:/var/lib/docker
    deploy:
      mode: global
      resources:
        limits:
          cpus: "0.10"
          memory: 128M
        reservations:
          cpus: "0.10"
          memory: 64M

  node-exporter:
    image: basi/node-exporter:${NODE_EXPORTER_VERSION:-v1.13.0}
    networks:
      - monitoring
    volumes:
      - /proc:/host/proc
      - /sys:/host/sys
      - /:/rootfs
      - /etc/hostname:/etc/host_hostname
    environment:
      HOST_HOSTNAME: /etc/host_hostname
    command: -collector.procfs "/host/proc" -collector.sysfs /host/sys -collector.textfile.directory /etc/node-exporter/ -collectors.enabled 'conntrack,diskstats,entropy,filefd,filesystem,loadavg,mdadm,meminfo,netdev,netstat,stat,textfile,time,vmstat,ipvs' # -collector.filesystem.ignored-mount-points "^/(sys|proc|dev|host|etc)($|/)"
    deploy:
      mode: global
      resources:
        limits:
          cpus: "0.10"
          memory: 32M
        reservations:
          cpus: "0.10"
          memory: 16M

  docker-exporter:
    image: basi/socat:${DOCKER_EXPORTER_VERSION:-v0.1.0}
    networks:
      - monitoring
    deploy:
      mode: global
      resources:
        limits:
          cpus: "0.05"
          memory: 6M
        reservations:
          cpus: "0.05"
          memory: 4M

  alertmanager:
    image: basi/alertmanager:${ALERTMANAGER_VERSION:-v0.1.0}
    networks:
      - monitoring
      # - logging
    ports:
     - "9093:9093"
    environment:
      SLACK_API: ${SLACK_API:-YOURTOKENGOESHERE}
      LOGSTASH_URL: http://logstash:8080/
    command: -config.file=/etc/alertmanager/config.yml
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: "0.01"
          memory: 32M
        reservations:
          cpus: "0.01"
          memory: 16M

  prometheus:
    image: basi/prometheus-swarm:${PROMETHEUS_SWARM_VERSION:-v0.4.3}
    ports:
      - "9090"
    networks:
      - monitoring
    command: -config.file=/etc/prometheus/prometheus.yml -storage.local.path=/prometheus -web.console.libraries=/etc/prometheus/console_libraries -web.console.templates=/etc/prometheus/consoles -alertmanager.url=http://alertmanager:9093
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: "0.50"
          memory: 1024M
        reservations:
          cpus: "0.50"
          memory: 128M

  grafana:
    image: basi/grafana:${GRAFANA_VERSION:-v4.1.1}
    ports:
      - "3000:3000"
    networks:
      - monitoring
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GF_PASSWORD:-admin}
      PROMETHEUS_ENDPOINT: http://prometheus:9090
      ELASTICSEARCH_ENDPOINT: ${ES_ADDRESS:-http://elasticsearch:9200}
      ELASTICSEARCH_USER: ${ES_USERNAME}
      ELASTICSEARCH_PASSWORD: ${ES_PASSWORD}
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: "0.50"
          memory: 64M
        reservations:
          cpus: "0.50"
          memory: 32M